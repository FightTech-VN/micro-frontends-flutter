name: iOS & Android upload Firebase Distribution
 
on:
  push:
    branches:
      - enhance/update-cicd-submit-app
  workflow_dispatch:
 

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable" # 'dev', 'alpha', default to: 'stable'
  #     - run: flutter pub get
  #     - run: flutter analyze

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable" # 'dev', 'alpha', default to: 'stable'
  #     - run: flutter pub get
  #     - run: flutter test

  build_apk:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout
        uses: actions/checkout@v2

      # - name: Post to a Slack channel
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.16.0
      #   with:
      #     # Slack channel id, channel name, or user id to post message.
      #     # See also: https://api.slack.com/methods/chat.postMessage#channels
      #     channel-id: 'C03A62G5NRY'
      #     # For posting a rich message using Block Kit
      #     payload: |
      #       {
      #         "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      #             }
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 

     
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: mobile-ci
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://fighttech.vn/wikiallergies/assets/images/logo.jpg
          SLACK_MESSAGE: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
          SLACK_TITLE: Post Title
          SLACK_USERNAME: WikiallergiesBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} 

      - name: 3. Install Bundle
        run: cd androids && bundle installs && cd ..


      # - name: 2. Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: '2.7.2'
      #     bundler-cache: true

      # - name: 3. Install Bundle
      #   run: cd android && bundle install && cd ..

      # - name: 4. Install Flutter
      #   uses: subosito/flutter-action@v2.3.0
      #   with:
      #     channel: 'stable'
      #     cache: true
      #     cache-key: flutter
      
      # - name: 5. Install Firebase Plugin
      #   run: cd android && bundle exec fastlane add_plugin firebase_app_distribution && cd ..

      # - name: 6. Build APK with Flutter
      #   run: flutter --version && flutter pub get && flutter build apk

      # - name: 7. Upload Firebase Distribution
      #   run: cd android && bundle exec fastlane distribute_via_firebase && cd ..
      #   env:
      #     CONSOLE_FIREBASE_TOKEN: ${{ secrets.CONSOLE_FIREBASE_TOKEN }}    

  # build_ios:
  #   runs-on: macos-latest
  #   steps:
  #     - name: 1. Checkout
  #       uses: actions/checkout@v2
  
  #     - name: 2. Setup Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.7.2'
  #         bundler-cache: true

  #     - name: 3. Install Bundle
  #       run: cd ios && bundle install && cd ..

  #     - name: 4. Install Flutter
  #       uses: subosito/flutter-action@v2.3.0
  #       with:
  #         channel: 'stable'
  #         cache: true
  #         cache-key: flutter    

  #     - name: 5. Install Firebase Plugin
  #       run: cd ios && bundle exec fastlane add_plugin firebase_app_distribution && cd ..

  #     - name: 6. Import Code-Signing Certificates
  #       uses: Apple-Actions/import-codesign-certs@v1
  #       with:
  #         p12-file-base64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
  #         p12-password: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}    

  #     - name: 7. Update Code Sign
  #       run: cd ios && bundle exec fastlane update_code_sign && cd ..
  #       env:
  #         ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
  #         ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
  #         ASC_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
  #         KEYCHAIN_PATH: ~/Library/Keychains/signing_temp.keychain-db
  #         PROFILES_NAME: "Flutter FightKIT AppStore"

  #     - name: 8. Build IPA with Flutter
  #       run: flutter --version && flutter pub get && flutter build ipa --export-options-plist=ios/ExportOptions/ExportOptionsAppStore.plist


  #     - name: 9. Upload Firebase Distribution
  #       run: cd ios && bundle exec fastlane distribute_via_firebase && cd ..
  #       env:
  #         FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
  #         FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPLICATION_SPECIFIC_PASSWORD }}
  #         CONSOLE_FIREBASE_TOKEN: ${{ secrets.CONSOLE_FIREBASE_TOKEN }}
