name: iOS build & upload
 
on:
  push:
    branches:
      - uat
  workflow_dispatch:

jobs:
  deploy:
    runs-on: macos-latest
    steps:
      - name: 1. Checkout
        uses: actions/checkout@v2

      - name: 2. Install Flutter
        uses: subosito/flutter-action@v2.3.0
        with:
          channel: 'stable'
          cache: true
          cache-key: flutter 
      # - run: flutter analyze
      # - run: flutter pub get && flutter test --coverage

      - name: 3. Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.2'
          bundler-cache: true

      - name: 4. Install Bundle
        run: cd ios && bundle install && cd ..

      - name: 5. Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
          p12-password: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}    

      - name: 6. Update Code Sign
        run: cd ios && bundle exec fastlane update_code_sign && cd ..
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
          KEYCHAIN_PATH: ~/Library/Keychains/signing_temp.keychain-db
          PROFILES_NAME: "Flutter FightKIT AppStore"

      - name: 7. Build IPA with Flutter
        run: flutter --version && flutter pub get && flutter build ipa --export-options-plist=ios/ExportOptions/ExportOptionsAppStore.plist

      - name: 8. Upload TestFlight
        run: cd ios/ && bundle exec fastlane upload_release && cd ..
        env:
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPLICATION_SPECIFIC_PASSWORD }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
          KEYCHAIN_PATH: ~/Library/Keychains/signing_temp.keychain-db

      # ðŸ”¥ Container action is only supported on Linux ðŸ”¥
      # - name: 9. Notify
      #   if: ${{ always() }}
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_CHANNEL: mobile-ci
      #     SLACK_USERNAME: WikiallergiesBot
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}        
      #     SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
      #     SLACK_ICON: https://fighttech.vn/wikiallergies/assets/images/logo.jpg
      #     SLACK_TITLE: Message
      #     SLACK_MESSAGE: "Upload iOS to TestFlight ${{ job.status }}"